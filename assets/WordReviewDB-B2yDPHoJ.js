import{d as o,o as l,W as d,c as u}from"./WordRecordDB-C7AD1LwK.js";import{r as p}from"./request-q6B9YFRj.js";function N(){return{EF:2.5,interval:0,repetitions:0}}function T({EF:e,interval:t,repetitions:i},a){return a?(i+=1,i===1?t=1:i===2?t=6:t=Math.round(t*e),e=Math.min(2.5,e+.1)):(i=0,t=1,e=Math.max(1.3,e-.2)),{EF:e,interval:t,repetitions:i}}function h(e){return p.get("/api/wordSm2/upsertData",{params:e})}const D={INITIAL_EF:2.5},s={WORD:"word",EF:"EF",INTERVAL:"interval",REPETITIONS:"repetitions",NEXT_REVIEW:"next_review"};class y{constructor(){this.dbName="wordReviewDB",this.storeName="words",this.db=null,this.version=3}async init(){return this.db?this.db:(this.db=await l(this.dbName,this.version,{upgrade(t){t.objectStoreNames.contains("words")||t.createObjectStore("words",{keyPath:s.WORD}).createIndex(s.NEXT_REVIEW,s.NEXT_REVIEW,{unique:!1})}}),this.db)}async addWord(t){const i={[s.WORD]:t,[s.EF]:D.INITIAL_EF,[s.INTERVAL]:0,[s.REPETITIONS]:0,[s.NEXT_REVIEW]:Date.now()};return await this.init(),this.putWord(i)}async putWord(t){return await this.init(),this.db.put(this.storeName,t)}async getTodayWords(){return await this.init(),this.getWordsToReview(new Date)}async getWordsToReview(t=null){await this.init();const a=this.db.transaction(this.storeName,"readonly").store.index(s.NEXT_REVIEW);if(t){const n=t;n.setHours(0,0,0,0);const r=n.getTime();n.setHours(23,59,59,999);const c=n.getTime();return a.getAll(window.IDBKeyRange.bound(r,c))}else return[]}async processReview(t,i){await this.init();let a=await this.getWord(t)||N();const{[s.EF]:n,[s.INTERVAL]:r,[s.REPETITIONS]:c}=a;let{EF:w,interval:W,repetitions:I}=T({EF:n,interval:r,repetitions:c},!!i);const E={...a,[s.EF]:w,[s.INTERVAL]:W,[s.REPETITIONS]:I,[s.NEXT_REVIEW]:Date.now()+r*24*60*60*1e3,[s.WORD]:t};return console.log("updatedWordData",E),await this.putWord(E),E}async importWord(t){return await this.init(),await this.getWord(t[s.WORD])?await this.putWord(t):await this.addWord(t[s.WORD])}async getWord(t){return await this.init(),this.db.get(this.storeName,t)}async getWords(t){return await this.init(),await Promise.all(t.map(i=>this.getWord(i)))}async getAllWords(){return await this.init(),this.db.getAll(this.storeName)}async deleteWord(t){return await this.init(),this.db.delete(this.storeName,t)}}const R=new y;R.init();async function f(e,t){o({word:e,status:u.PASS,type:d.LEARNING,bid:t})}async function g(e,t){o({word:e,status:u.FAIL,type:d.LEARNING,bid:t})}async function S(e,t){return o({word:e,status:u.PASS,type:d.REVIEW,bid:t}),h({word:e,pass:0,bid:t}),await R.processReview(e,1)}async function _(e,t){o({word:e,status:u.FAIL,type:d.REVIEW,bid:t}),h({word:e,pass:0,bid:t})}export{_ as a,S as b,g as f,f as p,R as w};
